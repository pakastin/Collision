!function(t){"use strict";function i(){var t;return t={util:{reduced:Math.PI/180,projectOnAxis:function(t,i){var r=JSON.parse(JSON.stringify(t)),n=JSON.parse(JSON.stringify(i)),e=(r.x*n.x+r.y*n.y)/(n.x*n.x+n.y*n.y);return n.x=e*n.x,n.y=e*n.y,n},dotProduct:function(t,i){return t.x*i.x+t.y*i.y},distanceV:function(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2))},normalize:function(t){var i=JSON.parse(JSON.stringify(t)),r=Math.sqrt(i.x*i.x+i.y*i.y);return 0!=r&&(i.x/=r,i.y/=r),i},rotatePoint:function(t,i,r){var n=r*reduced;return{x:Math.cos(n)*(t.x-i.x)-Math.sin(n)*(t.y-i.y)+i.x,y:Math.sin(n)*(t.x-i.x)+Math.cos(n)*(t.y-i.y)+i.y}},getAABB:function(t){var i=t.UL.x,r=t.UL.x,n=t.UL.y,e=t.UL.y;for(var x in t)t[x].x>i?i=t[x].x:t[x].x<r&&(r=t[x].x),t[x].y>n?n=t[x].y:t[x].y<e&&(e=t[x].y);return i=parseInt(i),n=parseInt(n),r=parseInt(r),e=parseInt(e),{UL:{x:r,y:e},UR:{x:i,y:e},LR:{x:i,y:n},LL:{x:r,y:n}}},getCenter:function(t){var i=origin_y=0;return i=t.UL.x<t.LR.x?t.UL.x+.5*(t.LR.x-t.UL.x):t.LR.x+.5*(t.UL.x-t.LR.x),t.UL.y<t.LR.y?origin_y=t.UL.y+.5*(t.LR.y-t.UL.y):origin_y=t.LR.y+.5*(t.UL.y-t.LR.y),{x:i,y:origin_y}},getMidpoint:function(t,i){var r=origin_y=0;return r=t.x<i.x?t.x+.5*(i.x-t.x):i.x+.5*(t.x-i.x),t.y<i.y?origin_y=t.y+.5*(i.y-t.y):origin_y=i.y+.5*(t.y-i.y),{x:r,y:origin_y}},keyOfLargestInObj:function(t){var i;for(key in t)if("undefined"==typeof i)var i=key;else t[key]>t[i]&&(i=key);return i},pointDistanceAlongLine:function(t,i,r){var n=(i.y-t.y)/(i.x-t.x),e={};return i.x>t.x?(e.x=Math.floor(t.x-r/Math.sqrt(1+n*n)),e.y=Math.floor((e.x-t.x)*n+t.y)):i.x<t.x?(e.x=Math.floor(t.x+r/Math.sqrt(1+n*n)),e.y=Math.floor((e.x-t.x)*n+t.y)):(e.x=Math.floor(t.x),t.y>i.y?e.y=Math.floor(t.y+r):e.y=Math.floor(t.y-r)),e},getNormal:function(t){var i=t.x;return t.x=-1*t.y,t.y=i,t},intersectOnAxis:function(i,r,n){var e=t.util.projectOnAxis(i.UL,n),x=t.util.projectOnAxis(i.UR,n),o=t.util.projectOnAxis(i.LR,n),y=t.util.projectOnAxis(i.LL,n),a=t.util.projectOnAxis(r.UL,n),u=t.util.projectOnAxis(r.UR,n),s=t.util.projectOnAxis(r.LR,n),c=t.util.projectOnAxis(r.LL,n),d={x:0,y:0},l={x:0,y:0},L={x:0,y:0},f={x:0,y:0},p=t.util.dotProduct(e,n),h=p,U=p;d=e,l=e;var R=t.util.dotProduct(x,n);h>R?(h=R,d=x):R>U&&(U=R,l=x);var v=t.util.dotProduct(o,n);h>v?(h=v,d=o):v>U&&(U=v,l=o);var M=t.util.dotProduct(y,n);h>M?(h=M,d=y):M>U&&(U=M,l=y);var O=t.util.dotProduct(a,n),g=O,A=O;L=a,f=a;var j=t.util.dotProduct(u,n);g>j?(g=j,L=u):R>A&&(A=j,f=u);var P=t.util.dotProduct(s,n);g>P?(g=P,L=s):P>A&&(A=P,f=s);var _=t.util.dotProduct(c,n);g>_?(g=_,L=c):_>A&&(A=_,f=c);var N={axis:n};return U>=A&&A>=h?(N.intersect=!0,N.depth=t.util.distanceV(f,d)):A>=U&&U>=g?(N.intersect=!0,N.depth=t.util.distanceV(l,L),N.axis.x*=-1,N.axis.y*=-1):N.intersect=!1,N}},test:function(i,r){var n={},e={x:i.UR.x-i.UL.x,y:i.UR.y-i.UL.y},x={x:i.LR.x-i.UR.x,y:i.LR.y-i.UR.y},o={x:r.UR.x-r.UL.x,y:r.UR.y-r.UL.y},y={x:r.UR.x-r.LR.x,y:r.UR.y-r.LR.y},a={},u=t.util.intersectOnAxis(i,r,e);if(u.intersect){a=u;var s=t.util.intersectOnAxis(i,r,x);if(s.intersect){a.depth>=s.depth&&(a=s);var c=t.util.intersectOnAxis(i,r,o);if(c.intersect){a.depth>=c.depth&&(a=c);var d=t.util.intersectOnAxis(i,r,y);if(d.intersect)return a.depth>=d.depth&&(a=d),a.axis=t.util.normalize(a.axis),n.projection={x:Math.round(a.axis.x*a.depth),y:Math.round(a.axis.y*a.depth)},0==Math.abs(n.projection.x)&&0==Math.abs(n.projection.y)?n.did_collide=!1:(n.did_collide=!0,n.entity=r),n}}}return n.projection={x:0,y:0},n.did_collide=!1,n}}}"undefined"==typeof Collision?t.Collision=i():console.log("Error defining Collision: already defined.")}(window);